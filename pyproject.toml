[build-system]
requires = ["setuptools >= 42", "versioningit ~= 1.0", "wheel"]
build-backend = "setuptools.build_meta"

[project]
name = "larest"
description = "Lactone Ring-opening Energetics Sorting Tool"
readme = "README.md"
keywords = ["polymerisation", "xtb", "CREST", "CENSO", "DFT", "SQM"]
license = { text = "MIT" }
authors = [
{ name = "Ryan Reese" },
{ name = "Alex Ganose" },
{ name = "Charles Romain" },
]
dynamic = ["version"]
classifiers = [
    "Development Status :: 5 - Production/Stable",
    "Intended Audience :: Information Technology",
    "Intended Audience :: Science/Research",
    "Intended Audience :: System Administrators",
    "Operating System :: OS Independent",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.11",
    "Topic :: Other/Nonlisted Topic",
    "Topic :: Scientific/Engineering",
]
requires-python = ">=3.11"

[tool.ruff]
line-length = 88
indent-width = 4
target-version = "py311"

[tool.ruff.lint]
select = ["ALL"]
ignore = [
    "EM",      # exception message must not use f-string literal
    "ERA001",  # found commented out code
    "FIX",     # line contains fixme/todo
    "TD",      # TODOs
    "TRY003",  # long message outside exception class
    "TRY401",  # verbose exception message
    "G004",    # logging statement uses f-string
    "BLE001",  # catching blind Exception
    "D", # disable docstrings for now
    "PLR", # disable refactor warnings
    "PTH", # switch all paths to Pathlib objects
    "COM819" # trialing commas
]
pydocstyle.convention = "numpy"
isort.known-first-party = ["src"]
isort.split-on-trailing-comma = true

[tool.ruff.lint.pycodestyle]
# E501 reports lines that exceed the length of 100.
max-line-length = 110

[tool.ruff.lint.per-file-ignores]
"__init__.py" = ["F401"]
"**/tests/*" = ["ANN", "ARG001", "D", "INP001", "S101"]
"docs/*" = ["INP001"]

[tool.ruff.format]
quote-style = "double"
indent-style = "space"
skip-magic-trailing-comma = false
line-ending = "auto"

